    int isRightDivisor(vector<int>& nums, int divisor, int threshold){
        int sum = 0;
        for(int i=0; i<nums.size(); i++){
            sum+=ceil(float(nums[i])/divisor);
            if(sum>threshold) return -1;
        }
        return sum;
    }
    int smallestDivisor(vector<int>& nums, int threshold) {
        int maxDiv=INT_MIN;
        for(auto i:nums){
            maxDiv=max(maxDiv, i);
        }
        int i=1;
        int j=maxDiv;
        int mid = i+(j-i)/2;
        int ans;
        while(i<=j){
            int cTh = isRightDivisor(nums, mid, threshold);
            if(cTh==-1 || cTh>threshold){
                i=mid+1;
            }
            else{
                if(cTh<=threshold) ans=mid;
                j=mid-1;
            } 
            mid=i+(j-i)/2;
        }
        return ans;
    }
