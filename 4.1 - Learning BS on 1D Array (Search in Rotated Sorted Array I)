    int searchPivot(int arr[], int n){
        int pivot = arr[0];
        int start=0;
        int end=n-1;
        int mid = start+(end-start)/2;
        while(start<end){
            if(arr[mid]>=pivot){
                start=mid+1;
            }
            else{
                end = mid-1;
            }
            mid = start+(end-start)/2;
        }
        return end;
    }
    int binarySearch(int arr[],int i, int j, int key){
        int mid = i+(j-i)/2;
        while(i<=j){
            if(arr[mid]==key) return mid;
            else if(arr[mid]>key) j=mid-1;
            else i=mid+1;
            mid = i+(j-i)/2;
        }
        return -1;
    }
    int search(int A[], int l, int h, int key){
        int pivot=searchPivot(A, h);
        if(key>=A[0]){
            return binarySearch(A, 0, pivot, key);
        }
        else{
            return binarySearch(A, pivot+1, h, key);
        }
    }
